name: Go Build, Package, and Release
on:
  push:
    tags:
    - 'v*' # SÃ³ roda em push de tags tipo v1.0.0
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: [amd64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    - name: Extract version from tag
      id: vars
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    - name: Build
      run: |
        EXT=""
        if [ "${{ matrix.goos }}" == "windows" ]; then
          EXT=".exe"
        fi

        mkdir -p build/${{ matrix.goos }}_${{ matrix.goarch }}
        
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}_${{ matrix.goarch }}/navpos${EXT}
    - name: Package
      run: |
        cd build
        FILENAME="navpos_${{ env.VERSION }}_${{ matrix.goos }}_${{ matrix.goarch }}"
        
        if [ "${{ matrix.goos }}" == "windows" ]; then
          zip -r $FILENAME.zip ${{ matrix.goos }}_${{ matrix.goarch }}
        else
          tar -czvf $FILENAME.tar.gz ${{ matrix.goos }}_${{ matrix.goarch }}
        fi
        cd ..
    - name: Upload packaged artifacts
      uses: actions/upload-artifact@v4
      with:
        name: navpos-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          build/*.zip
          build/*.tar.gz
  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-files
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-files/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
